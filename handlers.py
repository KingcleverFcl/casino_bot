from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from db import DB

router = Router()

class AuthState(StatesGroup):
    choose = State()
    nickname = State()
    password = State()

@router.message(F.text == "/start")
async def start_handler(msg: Message, state: FSMContext):
    markup = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üîë –£ –º–µ–Ω—è –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç")],
                  [KeyboardButton(text="üÜï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")]],
        resize_keyboard=True)
    await msg.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    await state.set_state(AuthState.choose)

@router.message(AuthState.choose, F.text == "üîë –£ –º–µ–Ω—è –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
async def login_step1(msg: Message, state: FSMContext):
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫:")
    await state.set_state(AuthState.nickname)

@router.message(AuthState.choose, F.text == "üÜï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
async def register_step1(msg: Message, state: FSMContext):
    await msg.answer("–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∏–∫:")
    await state.set_state(AuthState.nickname)

@router.message(AuthState.nickname)
async def input_password(msg: Message, state: FSMContext):
    await state.update_data(nickname=msg.text)
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
    await state.set_state(AuthState.password)

@router.message(AuthState.password)
async def complete_auth(msg: Message, state: FSMContext):
    data = await state.get_data()
    nickname = data['nickname']
    password = msg.text

    user = await DB.fetchrow("SELECT * FROM users WHERE telegram_id = $1", msg.from_user.id)
    if user:
        await msg.answer("–í—ã —É–∂–µ –≤–æ—à–ª–∏.")
    else:
        await DB.execute("INSERT INTO users (telegram_id, nickname, password) VALUES ($1, $2, $3)",
                         msg.from_user.id, nickname, password)
        await msg.answer("–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è! –í–∞—à –±–∞–ª–∞–Ω—Å: 100")
    await state.clear()